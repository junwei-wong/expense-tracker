{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/UI/Modal.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","children","className","classes","ExpenseDate","date","month","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpenseList","item","length","map","expense","id","ExpensesFilter","selectedYear","onChangeYear","value","onChange","event","target","ChartBar","props","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","forEach","expenseMonth","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","yearInput","ExpenseForm","onSaveExpenseData","toggleForm","defaultFormValues","enteredValue","setEnteredValue","inputChangeHandler","prevState","onSubmit","preventDefault","Date","type","min","step","onClick","Modal","NewExpense","onAddExpense","formStatus","setFormStatus","toggleFormHandler","prevStatus","enteredExpenseData","expenseData","random","initialExpenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9ab41f8.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = ({ children, className }) => {\r\n  const classes = `card ${className}`\r\n  return <div className={classes}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = ({ date }) => {\r\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = date.getFullYear();\r\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport React from \"react\";\r\n\r\nconst ExpenseItem = ({ title, amount, date }) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">RM{amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nconst ExpenseList = ({ item }) => {\r\n  if (item.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {item.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = ({ selectedYear, onChangeYear }) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    onChangeYear(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={selectedYear} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  props.expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  });\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = ({ expenses }) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const changeYearHandler = (yearInput) => {\r\n    setFilteredYear(yearInput);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={filteredYear}\r\n        onChangeYear={changeYearHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpenseList item={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = ({ onSaveExpenseData, toggleForm }) => {\r\n  const defaultFormValues = {\r\n    title: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n  };\r\n  const [enteredValue, setEnteredValue] = useState({ ...defaultFormValues });\r\n\r\n  const inputChangeHandler = (event) => {\r\n    const {\r\n      target: { value, id },\r\n    } = event;\r\n    setEnteredValue((prevState) => {\r\n      return { ...prevState, [id]: value };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    onSaveExpenseData({\r\n      title: enteredValue.title,\r\n      amount: +enteredValue.amount,\r\n      date: new Date(enteredValue.date),\r\n    });\r\n    setEnteredValue(defaultFormValues);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            onChange={inputChangeHandler}\r\n            value={enteredValue.title}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={inputChangeHandler}\r\n            value={enteredValue.amount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={inputChangeHandler}\r\n            value={enteredValue.date}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={toggleForm}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <Card className=\"modal\">\r\n        <header className=\"header\">\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className=\"content\">{props.children}</div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport Modal from \"../UI/Modal\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = ({ onAddExpense }) => {\r\n  const [formStatus, setFormStatus] = useState(false);\r\n  const toggleFormHandler = () => setFormStatus((prevStatus) => !prevStatus);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    onAddExpense(expenseData);\r\n    toggleFormHandler();\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <button onClick={toggleFormHandler}>Add New Expense</button>\r\n      {formStatus && (\r\n        <Modal title=\"Add Expense\">\r\n          <ExpenseForm\r\n            onSaveExpenseData={saveExpenseDataHandler}\r\n            toggleForm={toggleFormHandler}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst initialExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(initialExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}