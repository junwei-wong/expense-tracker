{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/UI/Button.js","components/Expenses/ExpenseList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/UI/Modal.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","children","className","classes","ExpenseDate","date","month","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","active","onClick","Button","props","type","ExpenseList","item","onDeleteExpense","useState","activeId","setActiveId","enableButtons","length","map","expense","id","ExpensesFilter","selectedYear","onChangeYear","value","onChange","event","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","forEach","expenseMonth","getMonth","Expenses","onEditExpense","filteredYear","setFilteredYear","filteredExpenses","filter","toString","yearInput","ExpenseForm","onSaveExpenseData","toggleForm","currentDate","Date","defaultFormValues","getDate","enteredValue","setEnteredValue","inputChangeHandler","prevState","onSubmit","preventDefault","valueOf","min","step","Modal","NewExpense","onAddExpense","formStatus","setFormStatus","toggleFormHandler","prevStatus","enteredExpenseData","initialExpenses","App","setExpenses","prevExpenses","expenseIndex","newExpenses","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21fe5534.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = ({ children, className }) => {\r\n  const classes = `card ${className}`\r\n  return <div className={classes}>{children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = ({ date }) => {\r\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = date.getFullYear();\r\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport React from \"react\";\r\n\r\nconst ExpenseItem = ({ title, amount, date, active, onClick }) => {\r\n  return (\r\n    <li onClick={onClick}>\r\n      <Card className={`expense-item ${active ? \"active\" : \"\"}`}>\r\n        <ExpenseDate date={date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">RM{amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  const classes = props.className ? props.className : \"\";\r\n  return (\r\n    <button\r\n      className={`button ${classes}`}\r\n      onClick={props.onClick}\r\n      type={props.type || \"button\"}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Button from \"../UI/Button\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseList.css\";\r\n\r\nconst ExpenseList = ({ item, onDeleteExpense }) => {\r\n  const [activeId, setActiveId] = useState(\"\");\r\n  const enableButtons = activeId === \"\" ? \"disabled\" : \"\";\r\n\r\n  const activeIdHandler = (id) => {\r\n    setActiveId(id);\r\n  };\r\n\r\n  const deleteExpenseHandler = expenseId => {\r\n    onDeleteExpense(expenseId)\r\n    setActiveId(\"\");\r\n  }\r\n\r\n  if (item.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"expenses-list-title\">\r\n        <label>Expenses List</label>\r\n        <div>\r\n          {\r\n            <Button\r\n              className={enableButtons}\r\n              onClick={() => deleteExpenseHandler(activeId)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          }\r\n          {<Button className={enableButtons}>Edit</Button>}\r\n        </div>\r\n      </Card>\r\n      <ul className=\"expenses-list\">\r\n        {item.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            onClick={() => activeIdHandler(expense.id)}\r\n            active={activeId === expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = ({ selectedYear, onChangeYear }) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    onChangeYear(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select title=\"yearSelector\" value={selectedYear} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  props.expenses.forEach((expense) => {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  });\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport { useState } from \"react\";\r\n\r\nconst Expenses = ({ expenses, onDeleteExpense, onEditExpense }) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const changeYearHandler = (yearInput) => {\r\n    setFilteredYear(yearInput);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={filteredYear}\r\n        onChangeYear={changeYearHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpenseList\r\n        item={filteredExpenses}\r\n        onDeleteExpense={onDeleteExpense}\r\n        onEditExpense={onEditExpense}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = ({ onSaveExpenseData, toggleForm }) => {\r\n  const currentDate = new Date()\r\n  const formattedDate = `${currentDate.getFullYear()}-${currentDate.getMonth()+1}-${currentDate.getDate()}`\r\n  const defaultFormValues = {\r\n    title: \"\",\r\n    amount: \"\",\r\n    date: formattedDate,\r\n  };\r\n  const [enteredValue, setEnteredValue] = useState({ ...defaultFormValues });\r\n\r\n  const inputChangeHandler = (event) => {\r\n    const {\r\n      target: { value, id },\r\n    } = event;\r\n    setEnteredValue((prevState) => {\r\n      return { ...prevState, [id]: value };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    onSaveExpenseData({\r\n      title: enteredValue.title,\r\n      amount: +enteredValue.amount,\r\n      date: new Date(enteredValue.date),\r\n      id: new Date(enteredValue.date).valueOf().toString(),\r\n    });\r\n    setEnteredValue(defaultFormValues);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            onChange={inputChangeHandler}\r\n            value={enteredValue.title}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={inputChangeHandler}\r\n            value={enteredValue.amount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={inputChangeHandler}\r\n            value={enteredValue.date}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <Button onClick={toggleForm}>Cancel</Button>\r\n        <Button type=\"submit\">Add Expense</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <Card className=\"modal\">\r\n        <header className=\"header\">\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className=\"content\">{props.children}</div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Button from \"../UI/Button\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = ({ onAddExpense }) => {\r\n  const [formStatus, setFormStatus] = useState(false);\r\n  const toggleFormHandler = () => setFormStatus((prevStatus) => !prevStatus);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    onAddExpense({...enteredExpenseData});\r\n    toggleFormHandler();\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <Button onClick={toggleFormHandler}>Add New Expense</Button>\r\n      {formStatus && (\r\n        <Modal title=\"Add Expense\">\r\n          <ExpenseForm\r\n            onSaveExpenseData={saveExpenseDataHandler}\r\n            toggleForm={toggleFormHandler}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst initialExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(initialExpenses);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  };\n\n  const deleteExpenseHandler = (expenseIndex) => {\n    const newExpenses = [];\n    expenses.forEach((expense) => {\n      if (expense.id !== expenseIndex) newExpenses.push(expense);\n    });\n    setExpenses(newExpenses);\n  };\n\n  const editExpenseHandler = (expense, expenseIndex) => {\n    const newExpenses = [...expenses];\n    newExpenses[expenseIndex] = { ...expense };\n    setExpenses(newExpenses);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses\n        expenses={expenses}\n        onDeleteExpense={deleteExpenseHandler}\n        onEditExpense={editExpenseHandler}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}